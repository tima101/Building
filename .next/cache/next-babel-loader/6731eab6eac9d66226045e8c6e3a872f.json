{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/chanson6/Desktop/hddle-master/Building/pages/_app.js\";\nvar __jsx = React.createElement;\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport App from \"next/app\";\nimport React from \"react\";\nimport { theme } from \"../lib/theme\";\nimport Header from \"../components/Header\";\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = {};\n\n    if (Component.getInitialProps) {\n      _Object$assign(pageProps, (await Component.getInitialProps(ctx)));\n    } // console.log(pageProps);\n\n\n    return {\n      pageProps\n    };\n  }\n\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props; // console.log(pageProps);\n\n    return __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), __jsx(Header, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    })), __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/chanson6/Desktop/hddle-master/Building/pages/_app.js"],"names":["CssBaseline","ThemeProvider","App","React","theme","Header","MyApp","getInitialProps","Component","ctx","pageProps","componentDidMount","jssStyles","document","querySelector","parentNode","removeChild","render","props"],"mappings":";;;;AAAA,OAAOA,WAAP,MAAwB,+BAAxB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AACtB,eAAaK,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,UAAMC,SAAS,GAAG,EAAlB;;AAEA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7B,qBAAcG,SAAd,GAAyB,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAA/B;AACD,KAL8C,CAO/C;;;AAEA,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAS,IAAIA,SAAS,CAACG,UAA3B,EAAuC;AACrCH,MAAAA,SAAS,CAACG,UAAV,CAAqBC,WAArB,CAAiCJ,SAAjC;AACD;AACF;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA2B,KAAKQ,KAAtC,CADO,CAGP;;AAEA,WACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEd,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,MAAC,MAAD,eAAYM,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF,EAKE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF,CADF;AASD;;AAnCqB;;AAsCxB,eAAeJ,KAAf","sourcesContent":["import CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport App from \"next/app\";\nimport React from \"react\";\n\nimport { theme } from \"../lib/theme\";\n\nimport Header from \"../components/Header\";\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    const pageProps = {};\n\n    if (Component.getInitialProps) {\n      Object.assign(pageProps, await Component.getInitialProps(ctx));\n    }\n\n    // console.log(pageProps);\n\n    return { pageProps };\n  }\n\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    // console.log(pageProps);\n\n    return (\n      <ThemeProvider theme={theme}>\n        {/* ThemeProvider makes the theme available down the React tree thanks to React context. */}\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Header {...pageProps} />\n        <Component {...pageProps} />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}